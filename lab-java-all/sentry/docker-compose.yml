version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: sentry_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123456
    volumes:
      - sentry-postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: sentry_redis
    volumes:
      - sentry-redis-data:/data

  sentry:
    image: sentry:latest
    container_name: sentry_main
    ports:
      - "8080:9000"
    environment:
      # docker run --rm sentry config generate-secret-key 生成秘钥
      SENTRY_SECRET_KEY: k#w62e%1nqej1gfit&_)z4_8g^_0srexfumzz8zb#sgzn19xc)
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: admin
      SENTRY_DB_PASSWORD: admin123456
      SENTRY_REDIS_HOST: redis
    depends_on:
      - postgres
      - redis
    volumes:
      - sentry-data:/var/lib/sentry/files
      - sentry-postgres-data:/var/lib/postgresql/data

  cron:
    image: sentry:latest
    container_name: sentry_cron
    links:
      - redis
      - postgres
    command: "sentry run cron"
    environment:
      SENTRY_SECRET_KEY: k#w62e%1nqej1gfit&_)z4_8g^_0srexfumzz8zb#sgzn19xc)
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: admin
      SENTRY_DB_PASSWORD: admin123456
      SENTRY_REDIS_HOST: redis

  worker:
    image: sentry:latest
    container_name: sentry_worker
    links:
      - redis
      - postgres
    command: "sentry run worker"
    environment:
      SENTRY_SECRET_KEY: k#w62e%1nqej1gfit&_)z4_8g^_0srexfumzz8zb#sgzn19xc)
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: admin
      SENTRY_DB_PASSWORD: admin123456
      SENTRY_REDIS_HOST: redis

## 启动后执行 docker exec -it sentry_main sentry upgrade
## 需要创建用户

volumes:
  sentry-data:
  sentry-postgres-data:
  sentry-redis-data:
