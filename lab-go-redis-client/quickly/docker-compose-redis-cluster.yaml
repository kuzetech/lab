## 除了 docker-compose 启动该脚本
## 还需要进入任意 redis 节点执行 redis-cli --cluster create 172.30.0.3:6379 172.30.0.4:6379 172.30.0.5:6379 --cluster-replicas 0
## 该语句用于创建集群，如果 cluster-replicas = 1，则需要六个节点
## 创建成功后可以进入任意 redis 节点执行 redis-cli cluster info
## 该语句用于查看集群状态

networks:
  test-net:
    ipam:
      config:
        - subnet: 172.30.0.0/24

services:
  redis1:
    image: redis:6.2.7
    networks:
      test-net:
        ipv4_address: 172.30.0.3
    volumes:
      - ./conf/redis1.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf

  redis2:
    image: redis:6.2.7
    networks:
      test-net:
        ipv4_address: 172.30.0.4
    volumes:
      - ./conf/redis2.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6380:6379
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf

  redis3:
    image: redis:6.2.7
    networks:
      test-net:
        ipv4_address: 172.30.0.5
    volumes:
      - ./conf/redis3.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6381:6379
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf

  zookeeper:
    image: 'bitnami/zookeeper:3.8.0-debian-11-r21'
    networks:
      test-net:
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:2.8.1-debian-11-r7'
    networks:
      test-net:
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
